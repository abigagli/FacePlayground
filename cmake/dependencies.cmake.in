INCLUDE(GetPrerequisites)

CMAKE_POLICY (SET CMP0011 NEW) #Included scripts do automatic cmake_policy PUSH and POP
CMAKE_POLICY (SET CMP0012 NEW) #Allow the use of numeric and boolean constant in IF statements without interpreting them as variable names

GET_PREREQUISITES($<TARGET_FILE:@TARGET@> DEPENDENCIES 0 1 "" "@DEPENDENCIES_SEARCH_DIRS@")
#MESSAGE ("Searching for prerequisites in: @DEPENDENCIES_SEARCH_DIRS@")
#LIST_PREREQUISITES($<TARGET_FILE:@TARGET@> 1 0 1)

GET_FILENAME_COMPONENT (ABSOLUTE_INSTALL_PREFIX ${CMAKE_INSTALL_PREFIX} REALPATH)
SET (DEPENDENCY_DESTDIR ${ABSOLUTE_INSTALL_PREFIX}/@DEPENDENCIES_INSTALL_DIR@)

GET_FILENAME_COMPONENT (TARGET_FILENAME $<TARGET_FILE:@TARGET@> NAME)

FOREACH(DEPENDENCY ${DEPENDENCIES})
    #Obtain the NEEDED name
    GET_FILENAME_COMPONENT(DEPENDENCY_LINKED_NAME ${DEPENDENCY} NAME)

    #Solve it to the actual pathname
    GET_FILENAME_COMPONENT(DEPENDENCY_ACTUAL_FULLPATH ${DEPENDENCY} REALPATH)

    #And then get the filename part only (used later for symlinking in the staging folder
    GET_FILENAME_COMPONENT(DEPENDENCY_ACTUAL_NAME ${DEPENDENCY_ACTUAL_FULLPATH} NAME)


    FILE(INSTALL
        ${DEPENDENCY_ACTUAL_FULLPATH}
        DESTINATION ${DEPENDENCY_DESTDIR}
        TYPE EXECUTABLE
        )

IF (NOT (${DEPENDENCY_ACTUAL_NAME} STREQUAL ${DEPENDENCY_LINKED_NAME}))
    #MESSAGE ("SYMLINKING: ${DEPENDENCY_LINKED_NAME} --> ${DEPENDENCY_ACTUAL_NAME}")
    EXECUTE_PROCESS (COMMAND ${CMAKE_COMMAND} -E create_symlink ${DEPENDENCY_ACTUAL_NAME} ${DEPENDENCY_DESTDIR}/${DEPENDENCY_LINKED_NAME})
ENDIF()
ENDFOREACH()

IF (@SYMLINK_AT_TOPLEVEL@ AND NOT EXISTS ${ABSOLUTE_INSTALL_PREFIX}/${TARGET_FILENAME})
    EXECUTE_PROCESS (COMMAND ${CMAKE_COMMAND} -E create_symlink @TARGET_INSTALL_DIR@/${TARGET_FILENAME} ${ABSOLUTE_INSTALL_PREFIX}/${TARGET_FILENAME})
ENDIF()
